<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAABx2AAAcdgAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAAAAAgAAAAIAAAACAAAAAgAAAAEAAAAAAAAAAAAA
        AAAAAAABAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAGwAA
        AJQAAADEAAAAhwAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAEAAAACAAAAAgAAAAIAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFAAAABsAAAAaAAAAGQAA
        AB8AAADSAAAA/wAAAPkAAAD/AAAAtwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgAA
        AAQAAAACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAAAABAAAAAEAAAABAAAAAAAAAI4AAAD+AAAA/wAA
        AP8AAAD/AAAA+wAAAP8AAACOAAAAAAAAAKsAAAD/AAAANgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAA
        AAMAAAAAAAAAAAAAAAAAAAASAAAAKQAAADAAAAAmAAAADAAAAAAAAAAAAAAABAAAAAAAAAA5AAAA/wAA
        ANcAAACpAAAAsQAAAKoAAADAAAAA/wAAAIAAAAAAAAAAnwAAAP8AAAA6AAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAABAAAAAAAAABkAAAB4AAAAxwAAAO8AAAD+AAAA/wAAAP0AAADpAAAAuQAAAGMAAAAPAAAAAAAA
        AE4AAAD/AAAAbQAAAAAAAAAFAAAAAAAAABAAAADfAAAA/wAAAOoAAAD/AAAAxQAAAAIAAAAAAAAAAAAA
        AAAAAAACAAAAAgAAAAoAAAB6AAAA8wAAAP8AAAD+AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD+AAAA/wAA
        AOcAAABIAAAARwAAAP8AAABvAAAAAAAAAAcAAAAFAAAAAAAAACgAAACxAAAA4AAAAKQAAAAaAAAAAAAA
        AAAAAAAAAAAAAQAAAAUAAAAAAAAAWwAAAP8AAAD8AAAA+wAAAPwAAAD+AAAA/wAAAP8AAAD+AAAA/gAA
        APwAAAD7AAAA/wAAAPoAAADLAAAA/wAAAHIAAAAAAAAABAAAAAAAAAABAAAAAQAAAAAAAAAAAAAAAAAA
        AAEAAAABAAAAAAAAAAEAAAAAAAAAHgAAAHgAAAAAAAAAiwAAAP8AAAD7AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD9AAAA/AAAAPsAAAD/AAAAcAAAAAAAAAAEAAAAAAAAAAAAAAACAAAAAwAA
        AAAAAAADAAAAAgAAAAAAAAAAAAAAAgAAAAAAAACqAAAA/wAAAIMAAAAAAAAAogAAAP8AAAD6AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA+QAAAP8AAACNAAAAAAAAAAQAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAAAAAAAAWwAAAP8AAAD4AAAA/wAAAHQAAAAAAAAAswAA
        AP8AAAD7AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD+AAAA/wAAAPcAAAArAAAAAAAA
        AAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIAAADQAAAA/wAAAPwAAAD8AAAA/wAA
        AGEAAAAAAAAAxAAAAP8AAAD7AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD7AAAA/wAA
        AJ0AAAAAAAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAAAAP8AAAD9AAAA/wAA
        AP4AAAD9AAAA/wAAAE4AAAAFAAAA0gAAAP8AAAD7AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        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
        AEDSAACB6IQBgPIkAIj+hAiA//+iQf/0CoA=
</value>
  </data>
</root>